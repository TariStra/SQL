-- Create a table for the Spotify data

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


-- Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(popularity) AS average_popularity
FROM SpotifyData 
GROUP BY artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;

-- Create a table called CityBikeLanes

CREATE TABLE BIT_DB.CityBikeLanes (
id integer primary key,
year_installed year not null,
year_updated year not null,
street varchar not null,
width_feet integer not null,
safetyrating integer not null,
protected varchar not null)


-- QUERY #1 
-- Get an overview of the data. Instead of looking at the entire table, 10 rows will do.

SELECT * FROM CityBikeLanes LIMIT 10

--  Create a list of all the bike lanes that have an average safety rating of 4.0 or higher. Show the average safety rating for each of those bike lanes, and a label that says "Safe Lane".

-- THE CODE BELOW THIS LINE IS THE CTE -- 
WITH safety_average_cte AS (
SELECT street, AVG(safetyrating) as 'rating'
FROM citybikelanes
GROUP BY street)
-- THE CODE ABOVE THIS LINE IS THE CTE --

-- THE CODE BELOW THIS LINE IS A SQL QUERY THAT SELECTS FROM THE CTE --
SELECT 
street,
rating,
'safe lane' as 'label'
FROM safety_average_cte
WHERE rating >=4
-- THE CODE ABOVE THIS LINE IS A SQL QUERY THAT SELECTS FROM THE CTE --
















